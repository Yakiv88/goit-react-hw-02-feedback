{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notifacation.jsx","App/App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","handleClick","map","option","index","type","name","onClick","className","s","button","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","e","target","console","log","setState","prevState","feedbacksCounter","positivePercentageCalculator","result","percentage","Math","round","keys","Object","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4QAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLC,KAAMH,EACNI,QAASN,EACTO,UAAWC,IAAEC,OALf,SAOGP,GANIC,QCNA,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,UCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,4BAAIA,M,ICEWC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPb,YAAc,SAACoB,GACb,IAAMf,EAAOe,EAAEC,OAAOhB,KACtBiB,QAAQC,IAAIlB,GACZ,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAUpB,GAAQ,MAE5BiB,QAAQC,IAAI,EAAKJ,MAAMd,K,EAEzBqB,iBAAmB,WACjB,MAA+B,EAAKP,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBc,6BAA+B,WAC7B,IAAMC,EAAS,EAAKF,mBAEdG,EAAqB,IADV,EAAKV,MAAdR,KAC0BiB,EAClC,OAAOE,KAAKC,MAAMF,I,4CAEpB,WACE,IAAMG,EAAOC,OAAOD,KAAKE,KAAKf,OACxBL,EAAQoB,KAAKR,mBACbX,EAAqBmB,KAAKP,+BAChC,OACE,sBAAKpB,UAAU,MAAf,UACE,cAACZ,EAAD,CAASC,MAAM,YAAf,SACE,cAACE,EAAD,CACEC,QAASiC,EACThC,YAAakC,KAAKlC,gBAIX,IAAVc,EACC,cAACE,EAAD,CAAcC,QAAQ,sBAEtB,cAACtB,EAAD,CAASC,MAAM,aAAf,SACE,cAACc,EAAD,CACEC,KAAMuB,KAAKf,MAAMR,KACjBC,QAASsB,KAAKf,MAAMP,QACpBC,IAAKqB,KAAKf,MAAMN,IAChBC,MAAOA,EACPC,mBAAoBA,a,GA9CDoB,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.d1d56da3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types'\nimport s from './FeedbackOptions.module.css'\n\nexport default function FeedbackOptions({ options, handleClick }) {\n  return (\n    <>\n      {options.map((option, index) => (\n        <button\n          key={index}\n          type=\"button\"\n          name={option}\n          onClick={handleClick}\n          className={s.button}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  )\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  handleClick: PropTypes.func.isRequired,\n}\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <p>good:{good}</p>\n      <p>neutral:{neutral}</p>\n      <p>bad:{bad}</p>\n      <p>total:{total}</p>\n      <p>positive feedback:{positivePercentage}%</p>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react'\nimport './App.css'\nimport Section from '../Components/Section/Section'\nimport FeedbackOptions from '../Components/FeedbackOptions/FeedbackOptions'\nimport Statistics from '../Components/Statistics/Statistics'\nimport Notification from '../Components/Notification/Notifacation'\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n  handleClick = (e) => {\n    const name = e.target.name\n    console.log(name)\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }))\n    console.log(this.state[name])\n  }\n  feedbacksCounter = () => {\n    const { good, neutral, bad } = this.state\n    return good + neutral + bad\n  }\n  positivePercentageCalculator = () => {\n    const result = this.feedbacksCounter()\n    const { good } = this.state\n    const percentage = (good * 100) / result\n    return Math.round(percentage)\n  }\n  render() {\n    const keys = Object.keys(this.state)\n    const total = this.feedbacksCounter()\n    const positivePercentage = this.positivePercentageCalculator()\n    return (\n      <div className=\"App\">\n        <Section title=\"Feedback:\">\n          <FeedbackOptions\n            options={keys}\n            handleClick={this.handleClick}\n          ></FeedbackOptions>\n        </Section>\n\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            ></Statistics>\n          </Section>\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1P21H\"};"],"sourceRoot":""}